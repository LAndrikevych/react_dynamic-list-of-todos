{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortType","TodoList","todos","selectedTodoId","todoToOpen","className","map","todo","id","completed","title","type","onClick","TodoFilter","changeFilterBy","changeQuery","query","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","useState","user","setUser","userIsLoading","setUserLoading","useEffect","userId","userFromServer","href","email","name","App","setTodos","isLoading","setLoading","filterBy","setFilterBy","setQuery","visibleTodos","setVisibleTodos","setSelectedTodo","todosFromServer","handleFilter","toLowerCase","includes","filter","filterType","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aae75cc3.chunk.js","sourcesContent":["export enum SortType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number,\n  todoToOpen: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  todoToOpen,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n          className={\n            selectedTodoId !== todo.id ? '' : 'has-background-info-light'\n          }\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={\n                todo.completed ? 'has-text-success' : 'has-text-danger'\n              }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => todoToOpen(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={\n                    selectedTodoId !== todo.id\n                      ? 'far fa-eye'\n                      : 'far fa-eye-slash'\n                  }\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { SortType } from '../../types/Filter';\n\ntype Props = {\n  changeFilterBy: (filterType: string) => void,\n  changeQuery: (value: string) => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  changeFilterBy,\n  changeQuery,\n  query,\n}) => {\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    changeFilterBy(event.target.value);\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleChange}\n          >\n            <option value={SortType.ALL}>All</option>\n            <option value={SortType.ACTIVE}>Active</option>\n            <option value={SortType.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => changeQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  selectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [userIsLoading, setUserLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(userFromServer => {\n        setUser(userFromServer);\n        setUserLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {userIsLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-danger\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { SortType } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setLoading] = useState<boolean>(true);\n  const [filterBy, setFilterBy] = useState<string>(SortType.ALL);\n  const [query, setQuery] = useState<string>('');\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setVisibleTodos(todosFromServer);\n        setLoading(false);\n      });\n  }, []);\n\n  const changeFilterBy = (filterType: string) => {\n    setFilterBy(filterType);\n  };\n\n  const handleQuery = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleFilter = (title: string) => {\n    return title.toLowerCase().includes(query.toLowerCase());\n  };\n\n  useEffect(() => {\n    switch (filterBy) {\n      case SortType.ALL:\n        return setVisibleTodos(todos.filter(todo => handleFilter(todo.title)));\n\n      case SortType.ACTIVE:\n        return setVisibleTodos(todos.filter(todo => !todo.completed && handleFilter(todo.title)));\n\n      case SortType.COMPLETED:\n        return setVisibleTodos(todos.filter(todo => todo.completed && handleFilter(todo.title)));\n\n      default:\n        return setVisibleTodos(todos);\n    }\n  }, [query, filterBy]);\n\n  const todoToOpen = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                changeFilterBy={changeFilterBy}\n                changeQuery={handleQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodoId={selectedTodo?.id || 0}\n                  todoToOpen={todoToOpen}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          selectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}